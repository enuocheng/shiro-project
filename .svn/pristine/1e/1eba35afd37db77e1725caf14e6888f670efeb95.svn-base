package service

import cn.mycloudedu.framework.core.result.PageOrder
import cn.mycloudedu.framework.core.utils.JsonBinder
import cn.mycloudedu.user.param.SearchPositionParam
import cn.mycloudedu.user.service.HomePageService
import org.apache.log4j.Logger
import org.junit.Test
import org.junit.runner.RunWith
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.test.context.ContextConfiguration
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner

/**
  * Created by e诺
  * on 2017/4/20
  * Time 下午2:45
  */
@RunWith(classOf[SpringJUnit4ClassRunner])
@ContextConfiguration(Array("/spring-context.xml"))
class HomePageTest {
  private val log = Logger.getLogger(this.getClass)
  @Autowired val homePageService: HomePageService = null

  @Test def hotCompanyTest: Unit = {
    val pageOrder = new PageOrder
    pageOrder.setCurrent(2)
    pageOrder.setPageSize(2)
    log.info(JsonBinder.toNormalJson(homePageService.hotCompany(pageOrder)))
  }

  @Test def recommendPositionTest: Unit = {
    val pageOrder = new PageOrder
    pageOrder.setCurrent(1)
    pageOrder.setPageSize(20)
    val search = null
    log.info(JsonBinder.toNormalJson(homePageService.recommendPosition(pageOrder)))
  }

  @Test def searchPosition: Unit = {
    val pageOrder = new PageOrder
    pageOrder.setCurrent(1)
    pageOrder.setPageSize(10)
    val param = new SearchPositionParam
    //param.setProvince(11)
    //param.setCity(175)
    //    param.setProperty(1)
    //    param.setDegree(3)
    //    param.setMinSalary(3)
    //    param.setMaxSalary(5)
    //    param.setStage(2)
    param.setScale(1)
    log.info(JsonBinder.toNormalJson(homePageService.searchPosition(param, pageOrder)))
  }

  @Test def getPositionDetailsTest: Unit = {
    log.info(JsonBinder.toNormalJson(homePageService.getPositionDetails(86)))
  }

  @Test def getCompanyHomePageTest: Unit = {
    log.info(JsonBinder.toNormalJson(homePageService.getCompanyHomePage(34)))
  }

  @Test def getCompanyDetailsTest: Unit = {
    log.info(JsonBinder.toNormalJson(homePageService.getCompanyDetails(34)))
  }

  @Test def getRecruitPositionTest: Unit = {
    val pageOrder = new PageOrder
    pageOrder.setCurrent(1)
    pageOrder.setPageSize(20)
    log.info(JsonBinder.toNormalJson(homePageService.getRecruitPosition(34, pageOrder)))
  }
}
